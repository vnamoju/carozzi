PROCEDURE "SCP_CAROZZI_SAC::BLUEBOOT_TEST_SP_PRUEBA" (--stored procedure con parametros
    -- por ejemplo: GJAHR, WRTTP, PERIO, WTGBTR, PAROB1, PGRANT_NBR, etc
    tableName NVARCHAR(50),
    IN parameter1 NVARCHAR(10),  
    IN parameter2 NVARCHAR(10),
    --IN parameter3 NVARCHAR(99),
    
    -- por ejemplo: para GJHAR:2021, WRTTP:04, -- valido solo para parameters cuyo valor sea tipo NVARCHAR
    -- 
    IN valueParameter1 NVARCHAR(50), 
    IN valueParameter2 NVARCHAR(50)--,
    --IN valueParameter3 NVARCHAR(50)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   -- SQL DATA 
   AS 
BEGIN
        
    DECLARE realRows INTEGER DEFAULT 0;
    DECLARE virtualRows INTEGER DEFAULT 0;
    
    -- Contamos las filas reales.
    --cambiar PERIO='001' por parameter3=valueParameter3
    SELECT COUNT(*) INTO realRows FROM (SELECT * FROM "SCP_CAROZZI_SAC::VT_2021COEP_BLUEBOOT_TEST" WHERE parameter1=valueParameter1 AND PAOBJNR<>'0000000000' AND parameter2=valueParameter2 AND PERIO='001');
    -- Contamos las filas virtuales.
    SELECT COUNT(*) INTO virtualRows FROM (SELECT * FROM "SCP_CAROZZI_SAC::COEP_2021_BLUEBOOT_TEST");
    
           
    -- Si hay la misma cantidad, no hay nada que hacer.
    IF realRows = virtualRows THEN
        -- Exit
    END IF;
        
    -- En el caso de que las filas reales sean mayor a las virtuales,
    -- debemos insertar los datos que faltan.
    IF realRows > virtualRows THEN
        INSERT INTO "SCP_CAROZZI_SAC::COEP_2021_BLUEBOOT_TEST"
        SELECT * FROM "SCP_CAROZZI_SAC::VT_2021COEP_BLUEBOOT_TEST" 
        WHERE parameter1=valueParameter1 AND PAOBJNR<>'0000000000' 
        --cambiar PERIO='001' por parameter3=valueParameter3
        AND parameter2=valueParameter2 AND PERIO='001' 
        AND NOT EXISTS (
            SELECT 1 FROM "SCP_CAROZZI_SAC::COEP_2021_BLUEBOOT_TEST" 
            WHERE VT_2021COEP_BLUEBOOT_TEST.MANDT = COEP_2021_BLUEBOOT_TEST.MANDT
            AND VT_2021COEP_BLUEBOOT_TEST.KOKRS = COEP_2021_BLUEBOOT_TEST.KOKRS
            AND VT_2021COEP_BLUEBOOT_TEST.BELNR = COEP_2021_BLUEBOOT_TEST.BELNR
            AND VT_2021COEP_BLUEBOOT_TEST.BUZEI = COEP_2021_BLUEBOOT_TEST.BUZEI
        );
            
        -- Si se quiere devolver como parámetro de output, 
        -- sería algo como: insertedRows = :ROWCOUNT
        SELECT CONCAT(CONCAT('Se insertaron ', ::ROWCOUNT), ' filas') FROM "SCP_CAROZZI_SAC::DUMMY";
    END IF;
        
    -- En el caso de que las filas virtuales sean mayor a las reales,
    -- debemos eliminar los datos que sobran.
    IF realRows < virtualRows THEN
        DELETE FROM "SCP_CAROZZI_SAC::COEP_2021_BLUEBOOT_TEST" 
        WHERE parameter1=valueParameter1 AND PAOBJNR<>'0000000000'
        --cambiar PERIO='001' por parameter3=valueParameter3
        AND parameter2=valueParameter2 AND PERIO='001' 
        AND NOT EXISTS (
            SELECT 1 FROM "SCP_CAROZZI_SAC::VT_2021COEP_BLUEBOOT_TEST"
            WHERE VT_2021COEP_BLUEBOOT_TEST.MANDT = COEP_2021_BLUEBOOT_TEST.MANDT
            AND VT_2021COEP_BLUEBOOT_TEST.KOKRS = COEP_2021_BLUEBOOT_TEST.KOKRS
            AND VT_2021COEP_BLUEBOOT_TEST.BELNR = COEP_2021_BLUEBOOT_TEST.BELNR
            AND VT_2021COEP_BLUEBOOT_TEST.BUZEI = COEP_2021_BLUEBOOT_TEST.BUZEI
        );
        
        -- Si se quiere devolver como parámetro de output, 
        -- sería algo como: insertedRows = :ROWCOUNT
        SELECT CONCAT(CONCAT('Se eliminaron ', ::ROWCOUNT), ' filas') FROM "SCP_CAROZZI_SAC::DUMMY";
    END IF;
END